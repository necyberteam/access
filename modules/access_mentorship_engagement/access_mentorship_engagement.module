<?php

/**
 * @file
 * Module for customizing mentorship_engagement node.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Link;
use Drupal\access_misc\Plugin\Util\NotifyRoles;
use Drupal\Core\Url;
use Drupal\Component\Utility\Xss;

/**
 * Implements hook_form_alter().
 */
function access_mentorship_engagement_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'node_mentorship_engagement_edit_form' || $form_id == 'node_mentorship_engagement_form') {
    $form['field_tags_replace'] = [
      '#type' => 'container',
      '#attributes' => [
        'id' => 'field-tags-replace',
        'data-suggest' => '0',
      ],
      '#weight' => 11,
    ];

    $form['field_tags_replace']['field_suggest'] = [
      '#type' => 'container',
      '#attributes' => [
        'class' => [
          'bg-light-teal',
          'my-5',
          'p-5'
        ]
      ],
    ];

    $form['field_tags_replace']['field_suggest']['tag_list'] = [
      '#markup' => "<div id='match-tag-list' class='mb-3'>Get tag suggestions based on your description and then curate as necessary.</div>",
    ];
    $form['field_tags_replace']['field_suggest']['replace_button'] = [
      '#type' => 'button',
      '#value' => t('Suggest Tags'),
      '#limit_validation_errors' => array(),
      '#attributes' => [
        'class' => [
          'ml-0'
        ],
      ],
      '#ajax' => [
        'callback' => 'access_mentorship_engagement_replace_section_callback',
        'wrapper' => 'field-tags-replace',
      ],
    ];

    $form['field_tags_replace']['user_message'] = [
      '#markup' => "",
    ];

    $add_tags = \Drupal::service('access_misc.addtags');
    $output = $add_tags->getView();
    $tag_label = t('Tags');
    $tag_description = t('Select tags that relate to your engagement. Tags will help us find people with related expertise.');
    $tag_summary = t('Select Tags');

    $form['node_add_tags'] = [
      '#markup' => "<div class='font-bold form-required'>$tag_label</div>
        <div class='tag-description'>$tag_description</div>
        <div id='tag-suggestions'></div>
        <details class='tags m-0 mb-8'><summary class='font-bold'>$tag_summary</summary>$output</details>",
      '#weight' => 11,
      '#allowed_tags' => [
        'button',
        'details',
        'summary',
        'div',
        'span',
        'h2',
      ],
    ];

    # Lookup current users username.
    $current_user = \Drupal::currentUser();
    $uid = $current_user->id();
    $user = \Drupal\user\Entity\User::load($uid);
    // Create variable 'First Last (ID)'.
    $author = $user->get('field_user_first_name')->value . ' ' . $user->get('field_user_last_name')->value . ' (' . $uid . ')';

    $form['field_me_looking_for']['widget']['#attributes']['onchange'] = "setMentoree('$author')";

    # Set mentor mentee fields to author on opposite from selection.
#    $form['field_me_looking_for']['#ajax'] = [
#      'callback' => 'access_mentorship_engagement_select_mentoree',
#      'event' => 'autocompleteselect',
#      'wrapper' => 'mentoree',
#    ];

    // Attach javascript.
    $form['#attached']['library'][] = 'access_misc/node_add_tags';
    $form['#attached']['library'][] = 'access_mentorship_engagement/mentorship_engagement';
  }
}

/**
 * Ajax callback function to replace the section with '#markup'.
 */
function access_mentorship_engagement_select_mentoree(array &$form, FormStateInterface $form_state) {
  # Lookup current users username.
  $current_user = \Drupal::currentUser();
  $uid = $current_user->id();
  $user = \Drupal\user\Entity\User::load($uid);

  $form['field_mentee']['widget'][0]['#default_value'] = $user;
  $form['field_mentee']['widget'][0]['target_id']['#attributes']['data-suggest'] = 1;

  // Return the updated section.
  return $form['group_mentoree_container'];
}

/**
 * Ajax callback function to replace the section with '#markup'.
 */
function access_mentorship_engagement_replace_section_callback(array &$form, FormStateInterface $form_state) {
  $raw_data = $form_state->getUserInput();
  $body_filter = Xss::filter($raw_data['body'][0]['value']);
  $suggested_tag_ids = '0';
  if (strlen($body_filter) >= 400) {
    $llm = \Drupal::service('access_llm.ai_references_generator');
    $llm->generateTaxonomyPrompt('tags', 1, $body_filter);
    $suggested_tag_ids = implode(', ', $llm->taxonomyIdSuggested());
    $form['field_tags_replace']['user_message'] = [
      '#markup' => "",
    ];
  }
  else {
    $form['field_tags_replace']['user_message'] = [
      '#markup' => "<div class='match-tag-list bg-blue-200 text-sky-900 my-5 p-5'>
                    <strong class='text-sky-900'>Fill in the description above to get suggested tags.</strong><br />
                    Your description must be over 400 characters to get a suggestion.</div>",
    ];
  }
  $form['field_tags_replace']['#attributes']['data-suggest'] = $suggested_tag_ids ;

  // Return the updated section.
  return $form['field_tags_replace'];
}

function access_mentorship_engagement_node_insert(\Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->bundle() == 'mentorship_engagement') {
    $options = ['absolute' => TRUE];
    $nid = $entity->id();
    $here = Url::fromRoute('entity.node.canonical', ['node' => $nid], $options);
    $ccmnet_body['string'] = [
      '#type' => 'inline_template',
      '#template' => '<p>{{ text }} {{ link }}</p>',
      '#context' => [
        'text' => t('A new CCMNet mentorship engagement has been requested.'),
        'link' => Link::fromTextAndUrl(t('View Submission'), $here)->toString(),
      ],
    ];
    $author_body['string'] = [
      '#type' => 'inline_template',
      '#template' => '<p>{{ text }} {{ link }}</p>',
      '#context' => [
        'text' => t('Your requested CCMNet mentorship engagement has been created on the portal. Thank you for your participation! '),
        'link' => Link::fromTextAndUrl(t('View Submission'), $here)->toString(),
      ],
    ];
    $env = getenv('PANTHEON_ENVIRONMENT');
    $role = $env == 'live' ? 'ccmnet_pm' : 'site_developer';
    $render = \Drupal::service('renderer');
    $ccmnet_body = $render->renderRoot($ccmnet_body)->__toString();
    $author_body = $render->renderRoot($author_body)->__toString();

    // Get current users email.
    $current_user = \Drupal::currentUser();
    $user = \Drupal\user\Entity\User::load($current_user->id());
    $email = $user->getEmail();

    $nr = new NotifyRoles();
    $nr->notifyRole($role, t('New Mentorship Engagement created'), $ccmnet_body);
    $nr->notifyRole(NULL, t('Mentorship Engagement received'), $author_body, $email);
  }
}
