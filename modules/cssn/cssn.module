<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\cssn\Plugin\Util\RoleProgramSorter;

/**
 * @file
 * Module for CSSN.
 */

/**
 * Implements hook_form_alter().
 */
function cssn_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'webform_submission_edit_your_cssn_roles_add_form' || $form_id == 'webform_submission_edit_your_cssn_roles_edit_form') {
    $user = \Drupal::currentUser();
    $roles = $user->getRoles();
    $form['elements']['roles_']['#default_value'] = $roles;
    $form['actions']['submit']['#submit'][] = 'cssn_role_form_submit';
  }
  if ($form_id == 'webform_submission_join_the_cssn_network_add_form' || $form_id == 'webform_submission_join_the_cssn_network_edit_form') {
    $fields_to_roles = [
      'cssn' => 'General Member',
      'mentor' => 'MATCHPlus Mentor',
      'student' => 'Student-Facilitator',
      'consultant' => 'Premier Consultant',
      'cip' => 'NSF-funded CIP',
    ];
    $user = \Drupal::currentUser();
    $roles = $user->getRoles();
    $roles_set = [];
    foreach ($fields_to_roles as $field => $role) {
      if (in_array($field, $roles)) {
        $roles_set[] = $role;
      }
    }
    // Lookup taxonomy term id by name 'ACCESS CSSN'.
    $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties(['name' => 'ACCESS CSSN']);
    $term = reset($term);
    $term_id = $term->id();
    $role_program_sorter = new RoleProgramSorter($user);
    $region_set = $role_program_sorter->lookupRegion($term_id);
    if ($form_id == 'webform_submission_join_the_cssn_network_add_form' && !empty($roles_set && $region_set)) {
      \Drupal::messenger()->addMessage(t('The boxes checked below reflect your current roles, please select \'General Member\' and submit this form to participate in the CSSN.'), 'warning');
    }
    $form['elements']['i_am_joining_as_a_']['#default_value'] = $roles_set;
    $form['actions']['submit']['#submit'][] = 'cssn_form_submit';
  }
}

/**
 * Implements hook_form_submit().
 */
function cssn_role_form_submit(&$form, FormStateInterface $form_state) {
  $form_roles = [
    "mentor",
    "student",
    "research_computing_facilitator",
    "research_software_engineer",
    "ci_systems_engineer",
    "researcher",
  ];
  $user = \Drupal::currentUser();
  $role_program_sorter = new RoleProgramSorter($user);
  foreach ($form_roles as $role) {
    if (in_array($role, $form['elements']['roles_']['#value'])) {
      $role_program_sorter->addRole($role);
    } else {
      $role_program_sorter->removeRole($role);
    }
  }
}

/**
 * Implements hook_form_submit().
 */
function cssn_form_submit(&$form, FormStateInterface $form_state) {
  $elements = $form['elements']['i_am_joining_as_a_'];
  $general = $elements['General Member']['#checked'];
  $match_mentor = $elements['MATCHPlus Mentor']['#checked'];
  $student_facilitator = $elements['Student-Facilitator']['#checked'];
  $premier_consultant = $elements['Premier Consultant']['#checked'];
  $cip = $elements['NSF-funded CIP']['#checked'];
  // Lookup taxonomy term id by name 'ACCESS CSSN'.
  $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties(['name' => 'ACCESS CSSN']);
  $term = reset($term);
  $term_id = $term->id();
  $enroll_program = FALSE;
  if ($general || $match_mentor || $student_facilitator || $premier_consultant || $cip) {
    $enroll_program = TRUE;
  }
  $user = \Drupal::currentUser();
  cssn_role_region('cssn', $general, $term_id, $enroll_program, $user);
  cssn_role_region('mentor', $match_mentor, $term_id, $enroll_program, $user);
  cssn_role_region('student', $student_facilitator, $term_id, $enroll_program, $user);
  cssn_role_region('consultant', $premier_consultant, $term_id, $enroll_program, $user);
  cssn_role_region('cip', $cip, $term_id, $enroll_program, $user);
}


/**
 * Set or remove role and region.
 */
function cssn_role_region($role, $checked, $term_id, $enroll_program, $user) {
  $role_program_sorter = new RoleProgramSorter($user);
  if ($checked) {
    if (!empty($role)) {
      $role_program_sorter->addRole($role);
    }
    if ($enroll_program) {
      $role_program_sorter->addFieldRegion($term_id);
    }
  } else {
    if (!empty($role)) {
      $role_program_sorter->removeRole($role);
    }
    if ($enroll_program === FALSE) {
      $role_program_sorter->removeFieldRegion($term_id);
    }
  }
}
