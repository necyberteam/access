<?php

/**
 * @file
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function access_badges_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'user_form') {
    // Check if user is an administator.
    $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
    $roles = $user->getRoles();
    if (!in_array('administrator', $roles)) {
      $form['field_user_badges']['widget']['actions']['ief_add_existing']['#access'] = FALSE;
    }
  }
}

/**
 * Implements hook_cron().
 */
function access_badges_cron() {
  // Run this cron job every day at 4am.
  $currentTime = \Drupal::time()->getCurrentTime();
  $hour = date('H', $currentTime);
  $min = date('i', $currentTime);

  // Cron runs every 10 minutes
  if ($hour == 4 && $min < 20) {
    // Get 'New to ACCESS' term id.
    $new_to_access = \Drupal::service('access_badges.badgeTools')->getBadgeTid('New to ACCESS');

    // User entity lookup that were created 90 days or less ago and has
    // access-ci.org in their name.
    $users = \Drupal::service('access_badges.badgeTools')->getAccessUsers();

    // Set badges for users.
    \Drupal::service('access_badges.badgeTools')->setBadges($new_to_access, $users);

    // Get 'New to ACCESS' term id.
    $ag_group_coordinator = \Drupal::service('access_badges.badgeTools')->getBadgeTid('Affinity Group Coordinator');

    // Lookup users with 'affinity_group_leader' role.
    $ag_users = \Drupal::service('access_badges.badgeTools')->getAgRoleUsers();

    // Set badges for ag_users.
    \Drupal::service('access_badges.badgeTools')->setBadges($ag_group_coordinator, $ag_users);
  }
}
