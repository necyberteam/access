<?php

/**
 * @file
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function access_badges_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'user_form') {
    // Check if user is an administator.
    $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
    $roles = $user->getRoles();
    if (!in_array('administrator', $roles)) {
      $form['field_user_badges']['widget']['actions']['ief_add_existing']['#access'] = FALSE;
    }
  }
}

/**
 * Implements hook_cron().
 */
function access_badges_cron() {
  // Do not run for now.
  if ( TRUE == FALSE) {
    $query = \Drupal::entityQuery('taxonomy_term');
    $query->condition('vid', 'badges');
    $query->condition('name', 'New to ACCESS');
    $query->accessCheck(FALSE);
    $tids = $query->execute();
    // There should just be one term.
    $new_to_access = implode('', $tids);


    $connection = \Drupal::database();

    $connection->delete('user__field_user_badges')
      ->condition('field_user_badges_target_id', $new_to_accss)
      ->execute();

    // User entity lookup that were created 90 days or less ago and has
    // access-ci.org in their name.
    $query = \Drupal::entityQuery('user');
    $query->condition('created', strtotime('-90 days'), '>');
    $query->condition('name', '%access-ci.org%', 'LIKE');
    $query->accessCheck(FALSE);
    $users = $query->execute();

    foreach ($users as $user) {
      // Need to look up delta for $user, if it exists increment by 1.
      $query = $connection->select('user__field_user_badges', 'ufub');
      $query->fields('ufub', ['delta']);
      $query->condition('ufub.entity_id', $user);
      $query->orderBy('delta', 'DESC');
      $delta = $query->execute()->fetchField();
      $delta = $delta ? $delta + 1 : 0;

      $connection->insert('user__field_user_badges')
        ->fields([
          'bundle' => 'user',
          'deleted' => 0,
          'entity_id' => $user,
          'revision_id' => $user,
          'langcode' => 'en',
          'delta' => $delta,
          'field_user_badges_target_id' => $new_to_access,
        ])
        ->execute();
    }
  }
}
