<?php

use Drupal\views\ViewExecutable;
use Drupal\taxonomy\Entity\Term;
use Drupal\access_misc\Plugin\Util\EventDateConvert;

/**
 * Implements hook_views_post_render().
 */
function access_misc_views_post_render(ViewExecutable $view) {
  // Override view /admin/structure/views/view/resources/edit/page_2 title
  if ($view->id() == 'resources' && isset($view->getDisplay()->view->element['#display_id']) && $view->getDisplay()->view->element['#display_id'] == 'page_2') {
    $tid = $view->getTitle();
    if (term::load($tid)) {
      $title = 'Resources tagged ' . term::load($tid)->get('name')->value;
      // Set the view title.
      $view->setTitle($title);
      // Set the route title.
      $route = \Drupal::routeMatch()->getCurrentRouteMatch()->getRouteObject();
      $route->setDefault('_title', $title);
    }
  }
}

/**
 * Implements hook_entity_view_alter().
 */
function access_misc_entity_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {
  switch ($entity->getEntityTypeId()) {
    case 'eventseries':
      $date = $build['event_instances'][0]['#title'];
      $dates = explode(' - ', $date);
      $convert_date = new EventDateConvert($dates[0], $dates[1]);
      $build['event_instances'][0]['#title'] = $convert_date->getStart() . " - " . $convert_date->getEnd();
      break;
    case 'eventinstance':
      $convert_date = new EventDateConvert($build['date'][0]['start_date']['#markup'], $build['date'][0]['end_date']['#markup']);
      $build['date'][0]['start_date']['#markup'] = $convert_date->getStart();
      $build['date'][0]['end_date']['#markup'] = $convert_date->getEnd();
      break;
  }
}

/**
 * Implements hook_datalayer_alter()
 */
function access_misc_datalayer_alter(&$data_layer) {
  $dl_debug = TRUE;

  $userId = \Drupal::currentUser()->id();

  if ($dl_debug) {
    $msg = __FUNCTION__ . '() ------- $userId = ' . $userId
      . ' -- ' . basename(__FILE__) . ':' . __LINE__;
    \Drupal::messenger()->addStatus($msg);
    error_log('seamless: ' . $msg);
  }

  // Obfuscate the uid field in data layer.
  if (isset($data_layer['userUid'])) {
    unset($data_layer['userUid']);
  }
  $data_layer['hashedUserId'] = hash('md4', $userId);
}
